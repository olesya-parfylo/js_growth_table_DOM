{"version":3,"sources":["scripts/main.js"],"names":["appendRow","document","querySelector","removeRow","appendColumn","removeColumn","table","tr","getElementsByTagName","countRows","length","countColumns","children","minCount","maxCount","addEventListener","row","createElement","innerHTML","append","disabled","remove","forEach","item"],"mappings":";AAAA,aA0DA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxDA,IAAMA,EAAYC,SAASC,cAAc,eACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAeH,SAASC,cAAc,kBACtCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAQL,SAASC,cAAc,UAC/BK,EAAKN,SAASO,qBAAqB,MAErCC,EAAYF,EAAGG,OACfC,EAAeJ,EAAG,GAAGK,SAASF,OAE5BG,EAAW,EACXC,EAAW,GAEjBd,EAAUe,iBAAiB,QAAS,WAC9BN,GAAAA,EAAYK,EAAU,CAClBE,IAAAA,EAAMf,SAASgB,cAAc,MAEnCD,EAAIE,UAAYjB,SAASC,cAAc,MAAMgB,UAE7CZ,EAAMa,OAAOH,GACbP,IAEAN,EAAUiB,UAAW,EAEjBX,IAAcK,IAChBd,EAAUoB,UAAW,MAK3BjB,EAAUY,iBAAiB,QAAS,WAC9BN,EAAYI,IACdZ,SAASC,cAAc,MAAMmB,SAC7BZ,IAEAT,EAAUoB,UAAW,EAEjBX,IAAcI,IAChBV,EAAUiB,UAAW,MAK3BhB,EAAaW,iBAAiB,QAAS,WACjCJ,EAAeG,IACbP,EAAAA,GAAIe,QAAQ,SAAAC,GAAQA,OAAAA,EAAKJ,OAAOlB,SAASgB,cAAc,SAC3DN,IAEAN,EAAae,UAAW,EAEpBT,IAAiBG,IACnBV,EAAagB,UAAW,MAK9Bf,EAAaU,iBAAiB,QAAS,WACjCJ,EAAeE,IACbN,EAAAA,GAAIe,QAAQ,SAAAC,GACHA,EAAKrB,cAAc,MAE3BmB,WAGLV,IAEAP,EAAagB,UAAW,EAEpBT,IAAiBE,IACnBR,EAAae,UAAW","file":"main.0f7f1963.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('.field');\nconst tr = document.getElementsByTagName('tr');\n\nlet countRows = tr.length;\nlet countColumns = tr[0].children.length;\n\nconst minCount = 2;\nconst maxCount = 10;\n\nappendRow.addEventListener('click', () => {\n  if (countRows < maxCount) {\n    const row = document.createElement('tr');\n\n    row.innerHTML = document.querySelector('tr').innerHTML;\n\n    table.append(row);\n    countRows++;\n\n    removeRow.disabled = false;\n\n    if (countRows === maxCount) {\n      appendRow.disabled = true;\n    }\n  }\n});\n\nremoveRow.addEventListener('click', () => {\n  if (countRows > minCount) {\n    document.querySelector('tr').remove();\n    countRows--;\n\n    appendRow.disabled = false;\n\n    if (countRows === minCount) {\n      removeRow.disabled = true;\n    }\n  }\n});\n\nappendColumn.addEventListener('click', () => {\n  if (countColumns < maxCount) {\n    [...tr].forEach(item => item.append(document.createElement('td')));\n    countColumns++;\n\n    removeColumn.disabled = false;\n\n    if (countColumns === maxCount) {\n      appendColumn.disabled = true;\n    }\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  if (countColumns > minCount) {\n    [...tr].forEach(item => {\n      const td = item.querySelector('td');\n\n      td.remove();\n    });\n\n    countColumns--;\n\n    appendColumn.disabled = false;\n\n    if (countColumns === minCount) {\n      removeColumn.disabled = true;\n    }\n  }\n});\n"]}